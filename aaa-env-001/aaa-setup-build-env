#!/bin/bash

#
# ##################################################################
#
#

shopt -s extglob

cd "$HOME"

Usage() {
  cat <<EOF
   usage: ${0##*/} [options]
   
  [options]
  -p < purge ie delete repo directories
  before setting up again"
  
  it writes /etc/pbuilderrc as a default
  when HOME/.pbuilderrc is not present,
  It also sets up a local repo controlled
  by reprepro finally it writes the local
  repo entries to /etc/apt/sources.d
  and creates a default base immage

EOF
}

if [[ $1 = @(-h|--help) ]]; then
  Usage
  exit 1
fi

#source common functions
if [[ -r /usr/bin/aaa-common-functions ]]; then
	. /usr/bin/aaa-common-functions
	if [[ ! $? -eq 0 ]]; then
		echo " failed to source common functions at /usr/bin/aaa-common-functions"
		echo "quitting !! "
		exit 1
	fi
else
	echo " failed to find common functions at /usr/bin/aaa-common-functions"
	echo "quitting !! "
	exit 1
fi

#source settings
if [[ -e $HOME/.aaa_settings ]]; then
  Info "found a settings file.. reading it"
  . $HOME/.aaa_settings
fi

#source config
if [[ -e /etc/aaa-master-config ]]; then
  Info "found my master config file.. reading it"
	. /etc/aaa-master-config
	if [[ -e $HOME/.aaa-local-config ]]; then
		Info "[aaa-setup-pbuilder]found a local  config file.. reading it"
		. $HOME/.aaa-local-config
	fi
else
	Fuck "Failed to find master config file quitting"
fi

while getopts ":p" opt; do
  case $opt in
	p) purge=yes ;;
   \?) Fuck "Invalid option: -$OPTARG" ;;
  esac
done
#shift the options and args out the way http://wiki.bash-hackers.org/howto/getopts_tutorial
shift $((OPTIND-1))

#check script dependencies
CheckMyDeps "pbuilder reprepro"
#final check on build env
[[ $aaa_setup_build_base_complete == yes ]] || Fuck "this script needs the base build environment setup, run aaa_setup-build-base"

# clean up after any other runs
CleanMyBuildArea
[[ -e "$HOME/.pbuilderrc" ]] && rm -f "$HOME/.pbuilderrc"


################################### pbuilder ##############################################################

Block "writing pbuilderrc"

if [[ -e "/etc/pbuilderrc" ]]; then
	Warn "/etc/pbuilderrc already exists"
	Warn "backing up original and writing new"
	mv "/etc/pbuilderrc"  "/etc/pbuilderrc.bak"
	echo "# Masterconfig writen by aaa, original config saved to /etc/pbuilderrc.back " > "/etc/pbuilderrc"
else

	Info "writing new pbuilderrc"
	echo "#Master config writen by aaa, feel free to modify but dont fuck anything ! " > "/etc/pbuilderrc"
fi

	
echo "MIRRORSITE=\"$aaa_mirror\"
OTHERMIRROR=\"deb [trusted=yes] file://$aaa_work_repo_dir work main\"
BINDMOUNTS=\"$aaa_bindmounts\"
HOOKDIR=\"$aaa_pbuilder_hookdir\"
EXTRAPACKAGES=\"$aaa_extra_packages\"

APTCACHE=\"$aaa_apt_cache_dir\"
DEBEMAIL=\"$aaa_maintainer\"
BUILDRESULT=\"$aaa_build_result\"
COMPONENTS=\"$aaa_base_components\"
DEBBUILDOPTS=\"$aaa_buildopts\"
DEBOOTSTRAPOPTS=$aaa_debootstrap_opts
BUILDUSERNAME=\"\"
AUTO_DEBSIGN=no
DISTRIBUTION=$aaa_default_distro
APTCACHEHARDLINK=$aaa_hardlink
BASETGZ=\"$aaa_base_gz_dir/$aaa_base_gz\"
BUILDPLACE=\"$aaa_build_location\"" >> "/etc/pbuilderrc" || Fuck "failed to append to existing master pbuildrc exiting"




################################### repos ##############################################################


Block "writing $aaa_home_repo_dir/conf/distributions"





WriteRepo "$aaa_home_repo_codename" $purge
WriteRepo "$aaa_git_repo_codename" $purge
WriteRepo "$aaa_work_repo_codename" $purge
ActivateWorkRepo




Block "setup local repo entry in sources.list.d"


if [[ -e "/etc/apt/sources.list.d/pbuilder_local.list" ]]; then
	Warn "./etc/apt/sources.list.d/pbuilder_local.list already exists"
	Warn "overwriting"
fi
echo "deb [trusted=yes] file://$aaa_home_repo_dir $aaa_default_distro unstable unstablegit kali kaligit" > "/etc/apt/sources.list.d/pbuilder_local.list" || Fuck "failed to write to /etc/apt/sources.list.d/pbuilder_local.list exiting "


Block "create pbuilder base immage"

UpdateBase


SaveSettings "aaa_setup_build_env_complete" "yes"



